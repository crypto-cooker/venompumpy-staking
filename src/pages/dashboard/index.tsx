import { useState, useEffect, useCallback } from "react";
import GraButton from "@/components/common/Buttons";
import { Switch } from "@headlessui/react";
import Image from "next/image";
import MultiLineChart from "@/components/ui/MultiLineChart";
import Link from "next/link";
import { ethers } from "ethers";
import { useWeb3Context } from "@/context/Web3Context";
import { YIELDZ_ABI, YIELDZ_ADDRESS } from "@/config";
import Head from "next/head";
function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}
const myround = (amount: string) => {
  //in: String
  const samount =
    Math.round((parseFloat(amount) + Number.EPSILON) * 10000) / 10000;
  return samount.toString(); //out: string 100.0020030442 -> 100.002
};

const Dashboard = () => {
  const [agreed, setAgreed] = useState(false);
  const [totalSupply, settotalSupply] = useState("0");
  const [lockYieldz, setlockYieldz] = useState("0");
  const [marketCap, setmarketCap] = useState("0");
  const [lockedPercent, setlockedPercent] = useState(0);

  const [totalStakers, setTotalStakers] = useState("0");
  const [distributedCore, setDistributedCore] = useState("0");
  const [distributedShdw, setDistributedShdw] = useState("0");
  const [yzPrice, setyzPrice] = useState("0");
  const { yzContract, byzContract, sContract } = useWeb3Context();

  useEffect(() => {
    getDashboardInfo();
  }, []);

  async function getTotalSupply() {
    return ethers.utils.formatUnits(await yzContract.totalSupply());
  }
  async function getLockedYieldz() {
    const lockedYZ = ethers.utils.formatUnits(
      await byzContract.lockedYZAmount()
    );
    return lockedYZ;
  }
  async function getTotalStakers() {
    const totalStakers = await sContract.totalStaker();
    return totalStakers.toNumber();
  }
  async function getDistributedCores() {
    const distCores = ethers.utils.formatUnits(
      await sContract.distributedETH() // ETH -> Core   Contract Function
    );
    return distCores;
  }
  async function getDistributedShdws() {
    const distShdws = ethers.utils.formatUnits(
      await sContract.distributedSHDW() // ETH -> Core   Contract Function
    );
    return distShdws;
  }

  const getYZPrice = async () => {
    const res = await fetch(
      `https://api.dexscreener.com/latest/dex/tokens/${YIELDZ_ADDRESS}`
    )
      .then((res) => res.json())
      .then((response) => {
        console.log(response);
      })
      .catch((error) => {
        console.error("Error:", error);
      });
    return res;
  };
  const getDashboardInfo = async () => {
    // Get total supply
    const totalSupplyData = getTotalSupply();
    const lockedYieldzData = getLockedYieldz();
    const totalStakerData = getTotalStakers();
    const distCoreData = getDistributedCores();
    const distShdwData = getDistributedShdws();
    const [totalSupply, lockedYieldz, totalStakers, distCores, distShdws] =
      await Promise.all([
        totalSupplyData,
        lockedYieldzData,
        totalStakerData,
        distCoreData,
        distShdwData,
      ]);
    // live:.cid.d2f45d4a2649817
    const percent = parseFloat(lockedYieldz) / parseFloat(totalSupply);
    setlockedPercent(Math.floor(percent * 100 * 100) / 100);
    settotalSupply(parseFloat(totalSupply).toLocaleString());
    setlockYieldz(parseFloat(lockedYieldz).toLocaleString());
    setTotalStakers(totalStakers);
    setDistributedCore(distCores);
    setDistributedShdw(distShdws);
  };

  return (
    <>
      <Head>
        <title>Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <div className="grow min-[1144px]:flex justify-center w-[100%] mt-[55px] pb-[40px]">
        <div className="min-[1144px]:w-[69%] pb-[20px] mr-[10px] ">
          <div className="align-middle border-[1px] bg-[#1C1C1C]/[.6]  border-white/10 backdrop-blur-md rounded-2xl">
            {/* Current Statistic Started */}

            <div className="grid grid-cols-3 gap-4 justify-around pt-6 pb-[21px] m-2">
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/totalsupply.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">
                    Total Staked VP
                  </h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {/* {totalSupply} $YZ */}
                    0
                  </h4>
                </div>
              </div>
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/Locked $YZ.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">
                    Your Staked NFT1{" "}
                  </h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {/* {lockYieldz} $VP */} {"0"}
                  </h4>
                </div>
              </div>
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/Market Cap.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">Your Staked NFT2</h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {/* $ {marketCap} */}    {"0"}
                  </h4>
                </div>
              </div>
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/totalsupply.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">
                    Total Staked VP
                  </h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {/* {totalSupply} $YZ */}
                    0
                  </h4>
                </div>
              </div>
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/Locked $YZ.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">
                    Your Staked{" "}
                  </h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {/* {lockYieldz} $VP */} {"0"}
                  </h4>
                </div>
              </div>
              <div className="flex flex-row ">
                <div className="align-middle border-[1px] rounded-lg bg-white/5  border-white/10 my-auto w-[60px] h-[60px] flex">
                  <Image
                    className="z-[-9999] top-0 right-0 m-auto"
                    src="./icon/Market Cap.svg"
                    alt="slider pannel"
                    width={32}
                    height={32}
                  />
                </div>
                <div className="m-auto ml-2">
                  <h4 className="text-white text-[14px] m-auto">Total Staked NFT1</h4>
                  <h4 className="text-white font-semibold uppercase text-[24px] m-auto">
                    {marketCap}
                  </h4>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Dashboard;
